version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.2.1

# Filters for production builds
production_filters: &production_filters
  filters:
    branches:
      only:
        - master

debug_filters: &debug_filters
  filters:
    branches:
      only:
        - ci-setup

commands:
  # Set last release tag name to BASH_ENV
  get_release_tag_name:
    description: "Get release tag name from last commit"
    steps:
      - run:
          name: Define LAST_RELEASE_TAG_NAME Environment Variable at Runtime
          command: |
            echo "export LAST_RELEASE_TAG_NAME=0.0.98" >> $BASH_ENV
            echo $LAST_RELEASE_TAG_NAME
  # Set AWS credentials to BASH_ENV
  set_aws_credentials:
    description: "Set AWS credentials to environment variables for each customer"
    parameters:
      customer:
        type: string
      secret_var_prefix:
        type: string
    steps:
      - run:
          name: Define AWS_ACCES_KEY, AWS_SECRET_ACCESS_KEY
          command: |
            echo "export AWS_ACCESS_KEY_ID=$<< parameters.secret_var_prefix >>_AWS_ACCESS_KEY_ID" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$<< parameters.secret_var_prefix >>_AWS_SECRET_ACCESS_KEY" >> $BASH_ENV
  # Add AWS credentials to config file
  add_aws_credentials_to_config:
    description: "ADD AWS credentials to .env file for customer"
    parameters:
      customer:
        type: string
    steps:
      - run:
          command: |
            ls
            echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID" >> .env
            echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY" >> .env
jobs:
  wait_for_approve:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run: echo "Wait for approval"
  
  update_deploy:
    machine:
      image: ubuntu-1604:201903-01
    parameters:
      customer:
        type: string
      secret_var_prefix:
        type: string
    working_directory: ~/ci-build/<< parameters.customer >>
    steps:
      - checkout:
          path: ~/ci-build/<< parameters.customer >>/
      - get_release_tag_name
      - aws-cli/install
      - set_aws_credentials:
          customer: << parameters.customer >>
          secret_var_prefix: << parameters.secret_var_prefix >>
      - run: ls
      # - run:
      #     name: "Login to docker"
      #     command: |
      #       aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin $DOCKER_REGISTRY
      # - run:
      #     name: "Pull docker image"
      #     command: |
      #       docker pull $DOCKER_REGISTRY/hancock-prod-deploy:$LAST_RELEASE_TAG_NAME
      - add_aws_credentials_to_config:
          customer: << parameters.customer >>
      - run:
          name: "Run update"
          command: |
            ls
            cat .env
            # docker run --env-file .env -it $DOCKER_REGISTRY/hancock-prod-deploy:$LAST_RELEASE_TAG_NAME update
workflows:
  update_custom_deploys:
    jobs:
      - wait_for_approve:
          # <<: [*production_filters]
          type: approval
          name: "wait-for-approve-e-imzala"
      - wait_for_approve:
          # <<: [*production_filters]
          type: approval
          name: "wait-for-approve-trustcubes"
      - wait_for_approve:
          # <<: [*production_filters]
          type: approval
          name: "wait-for-approve-websign"
      - wait_for_approve:
          # <<: [*production_filters]
          type: approval
          name: "wait-for-approve-websign-stg"

      - update_deploy:
          # <<: [*production_filters]
          customer: "e-imzala"
          secret_var_prefix: "EIMZALA"
          name: "update-deploy-e-imzala"
          requires:
            - wait-for-approve-e-imzala
      - update_deploy:
          # <<: [*production_filters]
          customer: "trustcubes"
          secret_var_prefix: "TRUSCUBES"
          name: "update-deploy-trustcubes"
          requires:
            - wait-for-approve-trustcubes
      - update_deploy:
          # <<: [*production_filters]
          customer: "websign"
          secret_var_prefix: "WEBSIGN"
          name: "update-deploy-websign"
          requires:
            - wait-for-approve-websign
      - update_deploy:
          # <<: [*production_filters]
          customer: "websign-stg"
          secret_var_prefix: "WEBSIGN_STG"
          name: "update-deploy-websign-stg"
          requires:
            - wait-for-approve-websign-stg